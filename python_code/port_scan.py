import optparse
import socket
from socket import *
from threading import *

screenlock = Semaphore(value=1)

def conn_scan(tgt_host, tgt_port, message):
    try:
        conn_sock = socket(AF_INET, SOCK_STREAM)
        conn_sock.connect((tgt_host, tgt_port))
        conn_sock.send(message + '\r\n')
        results = conn_sock.recv(100)
        screenlock.acquire()
        print '[+]%d/tcp open' % tgt_port
        print '[+] ' + str(results)
    except Exception, e:
        screenlock.acquire()
        print ('[-]%d/tcp closed\t' % tgt_port), e
    finally:
        screenlock.release()
        conn_sock.close()      

def port_scan(tgt_host, tgt_ports, message):
    try: 
        tgt_ip = gethostbyname(tgt_host)
    except Exception, e:
        print "[-] Cannot resolve %s" % tgt_host
        return 

    # try and get the name 
    try: 
        tgt_name = gethostbyaddr(tgt_ip)
        print "[+] Scan results for: " + tgt_name[0]
    except Exception, e:
        print "[+] Scan results for: " + tgt_ip
    
    setdefaulttimeout(1)
    for tgt_port in tgt_ports:
        t = Thread(target=conn_scan, args=(tgt_host, int(tgt_port), message))
        t.start()

def main():
    
    # Parse command line options
    parser = optparse.OptionParser("usage %prog -H <target host> -p <target port>")
    parser.add_option("-H", dest='tgtHost', type='string', help='specify target host')
    parser.add_option('-p', dest='tgtPort', type='string', help='specify target port[s] separated by comma')
    parser.add_option('-m', dest='message', type='string', help='optional message to send the host :-)')

    (options, args) = parser.parse_args()
    tgtHost = options.tgtHost
    tgtPorts = str(options.tgtPort).split(',')
    
    message = options.message or "barbera striesand"

    if (tgtHost == None) or (tgtPorts[0] == None):
        print parser.usage
        exit(0)

    port_scan(tgtHost, tgtPorts, message)

if __name__ == '__main__':
    main()

